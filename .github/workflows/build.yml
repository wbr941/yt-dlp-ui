name: Build EXE

on:
  push:
    tags:
      - 'v*'  # 每当创建以 "v" 开头的标签时触发工作流，通常用于版本发布
  workflow_dispatch:  # 支持手动触发工作流

jobs:
  build:
    runs-on: windows-latest  # 使用 Windows 环境，因为我们需要在 Windows 上打包 EXE

    steps:
    # 获取代码
    - name: Checkout code
      uses: actions/checkout@v2

    # 设置 Python 环境
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'  # 你可以指定所需的 Python 版本

    # 安装依赖
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if (Test-Path "requirements.txt") { pip install -r requirements.txt }
        pip install pyinstaller  # 安装 PyInstaller 用于打包 EXE 文件

    # 打包 .exe 文件，隐藏控制台窗口
    - name: Build EXE
      run: |
        # 获取当前日期并格式化为 YYYYMMDD
        $current_date = (Get-Date).ToString('yyyyMMdd')
        
        # 使用 PyInstaller 打包并隐藏控制台窗口
        pyinstaller --onefile --windowed --add-data "gui.py;." --add-data "config.py;." --add-data "downloader.py;." --add-data "ffmpeg\bin\ffmpeg.exe;ffmpeg\bin" --distpath ./output --name "main-$current_date" main.py
      working-directory: .  # 设置工作目录为当前目录

    # 上传打包的 EXE 文件到 Artifacts（用于存储文件）
    - name: Upload EXE as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: main-exe
        path: ./output/main-*.exe  # 上传 output 目录下的所有 EXE 文件
